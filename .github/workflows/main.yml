- name: Create screenshot script
  run: |
    mkdir -p scripts
    cat > scripts/screenshot.js << 'EOF'
    const puppeteer = require('puppeteer');
    
    (async () => {
      try {
        console.log("Launching browser...");
        const browser = await puppeteer.launch({
          args: [
            '--no-sandbox',
            '--disable-setuid-sandbox',
            '--disable-gpu',
            '--disable-dev-shm-usage'
          ]
        });

        const page = await browser.newPage();
        console.log("Setting viewport...");
        await page.setViewport({ width: 1920, height: 1080 });
        
        console.log("Navigating to the page...");
        await page.goto('https://www.nea.gov.sg/weather/rain-areas', {
          waitUntil: 'networkidle2',
          timeout: 60000
        });
        
        console.log("Waiting for 3 seconds...");
        // Requires Puppeteer >=5.3.0. If your version is older, use page.waitFor() or update Puppeteer.
        await page.waitForTimeout(3000);
        
        console.log("Scrolling to the top...");
        await page.evaluate(() => window.scrollTo(0, 0));
        
        // Create a timestamp for the filename in UTC
        const now = new Date();
        const isoString = now.toISOString().split('.')[0].replace(/:/g, "-") + "Z";
        const filePath = `screenshot_archive/rain-areas-${isoString}.png`;  // Use backticks!
        
        console.log("Taking full-page screenshot...");
        await page.screenshot({ path: filePath, fullPage: true });
        
        console.log(`Screenshot saved as ${filePath}`);
        
        await browser.close();
      } catch (err) {
        console.error("Error encountered:", err);
        process.exit(1);
      }
    })();
    EOF

name: Screenshot Rain Areas Page

permissions:
  contents: write

on:
  schedule:
    # Runs at the top of every hour.
    - cron: '0 * * * *'
  workflow_dispatch:  # Allows manual triggering

jobs:
  screenshot_job:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '16'

      - name: Install Puppeteer
        run: |
          # Initialize a simple Node project and install Puppeteer
          npm init -y
          npm install puppeteer

      - name: Create screenshot script
        run: |
          mkdir -p scripts
          cat > scripts/screenshot.js << 'EOF'
          const puppeteer = require('puppeteer');
          
          (async () => {
            // Launch browser with flags required in many CI environments
            const browser = await puppeteer.launch({
              args: ['--no-sandbox', '--disable-setuid-sandbox']
            });
            const page = await browser.newPage();
            // Navigate to the page and wait until the network is idle.
            await page.goto('https://www.nea.gov.sg/weather/rain-areas', { waitUntil: 'networkidle2' });
            
            // Create a timestamp for the filename
            const now = new Date();
            // Format the ISO string by removing milliseconds and replacing colons with dashes for a valid filename
            const isoString = now.toISOString().split('.')[0].replace(/:/g, "-") + "Z";
            const filePath = `screenshot_archive/rain-areas-${isoString}.png`;
            
            // Take a full-page screenshot
            await page.screenshot({ path: filePath, fullPage: true });
            console.log(`Screenshot saved as ${filePath}`);
            await browser.close();
          })().catch(err => {
            console.error(err);
            process.exit(1);
          });
          EOF

      - name: Create screenshot_archive directory
        run: mkdir -p screenshot_archive

      - name: Run screenshot script
        run: node scripts/screenshot.js

      - name: Commit and push screenshot
        run: |
          git config --global user.name "github-actions[bot]"
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git add screenshot_archive/
          git commit -m "Add screenshot: $(date -u +'%Y-%m-%dT%H-%M-%SZ')" || echo "No changes to commit"
          git push
